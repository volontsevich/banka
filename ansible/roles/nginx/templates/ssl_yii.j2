server
{
    include     ports/http.conf;
    server_name {{ item.server_name }};
    return      301 https://{{ item.server_name }}$request_uri;
}
server
{
    include     ports/http.conf;
    server_name www.{{ item.server_name }};
    return      301 https://{{ item.server_name }}$request_uri;
}
server
{
    server_name www.{{ item.server_name }};

    include enable/ssl.conf;
    {% if (item.path_to_ssl_certificate_file is defined) %}
        ssl_certificate    {{ item.path_to_ssl_certificate_file }};
	{% else %}
        ssl_certificate    {{ nginx_certs_folder }}{{ item.ssl_certificate_file }};
    {% endif %}

    {% if (item.path_to_ssl_certificate_key_file is defined) %}
        ssl_certificate_key    {{ item.path_to_ssl_certificate_key_file }};
    {% else %}
        ssl_certificate_key {{ nginx_certs_folder }}{{ item.ssl_certificate_key_file }};
    {% endif %}

    {% if (item.path_to_ssl_dhparam_file is defined) %}
        ssl_dhparam    {{ item.path_to_ssl_dhparam_file }};
	{% else %}
        ssl_dhparam    {{ nginx_certs_folder }}{{ item.ssl_dhparam_file }};
    {% endif %}

    include     ports/ssl.conf;
    return      301 https://{{ item.server_name }}$request_uri;
}
server
{
    server_name {{ item.server_name }};
    root        {{ item.root }};

    include enable/ssl.conf;
    {% if (item.path_to_ssl_certificate_file is defined) %}
        ssl_certificate    {{ item.path_to_ssl_certificate_file }};
	{% else %}
        ssl_certificate    {{ nginx_certs_folder }}{{ item.ssl_certificate_file }};
    {% endif %}

    {% if (item.path_to_ssl_certificate_key_file is defined) %}
        ssl_certificate_key    {{ item.path_to_ssl_certificate_key_file }};
    {% else %}
        ssl_certificate_key {{ nginx_certs_folder }}{{ item.ssl_certificate_key_file }};
    {% endif %}

    {% if (item.path_to_ssl_dhparam_file is defined) %}
        ssl_dhparam    {{ item.path_to_ssl_dhparam_file }};
	{% else %}
        ssl_dhparam    {{ nginx_certs_folder }}{{ item.ssl_dhparam_file }};
    {% endif %}

    set $yii_bootstrap "index.php";

    include         ports/ssl.conf;
    include         limits/methods.conf;
    include         locations/favicon.conf;
    include         locations/favicon_apple.conf;
	include         locations/static.conf;
    include         locations/php.conf;

    {% if (item.basic_auth is defined) and (item.basic_auth is sameas true) %}
    auth_basic "Restricted";
    auth_basic_user_file {{ nginx_http_basic_auth_file }};
    {% endif %}

    ########## Your custom locations & settings ##########
	location / {
		index  index.html $yii_bootstrap;
		try_files $uri $uri/ /$yii_bootstrap?$args;
	}

	location ~ ^/(protected|framework|themes/\w+/views) {
		deny  all;
		access_log off;
        log_not_found off;
	}

	#avoid processing of calls to unexisting static files by yii
	location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
		try_files $uri =404;
	}

	# prevent nginx from serving dotfiles (.htaccess, .svn, .git, etc.)
	location ~ /\. {
		deny all;
		access_log off;
		log_not_found off;
	}
}
