server
{
    include     ports/http.conf;
    server_name {{ item.server_name }};
    return      301 https://{{ item.server_name }}$request_uri;
}
server
{
    include     ports/http.conf;
    server_name www.{{ item.server_name }};
    return      301 https://{{ item.server_name }}$request_uri;
}
server
{
    server_name www.{{ item.server_name }};

    include enable/ssl.conf;
    {% if (item.path_to_ssl_certificate_file is defined) %}
        ssl_certificate    {{ item.path_to_ssl_certificate_file }};
	{% else %}
        ssl_certificate    {{ nginx_certs_folder }}{{ item.ssl_certificate_file }};
    {% endif %}

    {% if (item.path_to_ssl_certificate_key_file is defined) %}
        ssl_certificate_key    {{ item.path_to_ssl_certificate_key_file }};
    {% else %}
        ssl_certificate_key {{ nginx_certs_folder }}{{ item.ssl_certificate_key_file }};
    {% endif %}

    {% if (item.path_to_ssl_dhparam_file is defined) %}
        ssl_dhparam    {{ item.path_to_ssl_dhparam_file }};
	{% else %}
        ssl_dhparam    {{ nginx_certs_folder }}{{ item.ssl_dhparam_file }};
    {% endif %}

    include     ports/ssl.conf;
    return      301 https://{{ item.server_name }}$request_uri;
}
server
{
    server_name {{ item.server_name }};

    include enable/ssl.conf;
    {% if (item.path_to_ssl_certificate_file is defined) %}
        ssl_certificate    {{ item.path_to_ssl_certificate_file }};
	{% else %}
        ssl_certificate    {{ nginx_certs_folder }}{{ item.ssl_certificate_file }};
    {% endif %}

    {% if (item.path_to_ssl_certificate_key_file is defined) %}
        ssl_certificate_key    {{ item.path_to_ssl_certificate_key_file }};
    {% else %}
        ssl_certificate_key {{ nginx_certs_folder }}{{ item.ssl_certificate_key_file }};
    {% endif %}

    {% if (item.path_to_ssl_dhparam_file is defined) %}
        ssl_dhparam    {{ item.path_to_ssl_dhparam_file }};
	{% else %}
        ssl_dhparam    {{ nginx_certs_folder }}{{ item.ssl_dhparam_file }};
    {% endif %}

    {% if (item.basic_auth is defined) and (item.basic_auth is sameas true) %}
        auth_basic "Restricted";
        auth_basic_user_file {{ nginx_http_basic_auth_file }};
    {% endif %}

    include         ports/ssl.conf;
    include         limits/methods.conf;
    include         locations/favicon.conf;
    include         locations/favicon_apple.conf;
    include         enable/cors.conf;

    ########## Your custom locations & settings ##########
	location / {
        proxy_pass {{ item.proxy_pass_url }};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache_bypass $http_upgrade;
	}
}
